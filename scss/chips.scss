@import "_mixins.scss";
@import "_variables.scss";

$size: 22px;

@mixin closeBtnColor($color, $rgba){
    color: color($color, $rgba);
    &:hover{
      color: color($color, 1);
    }
}
a{
  text-decoration: none;
}
.mui-chips {
  background: color('basic', .6);
  padding: 8px;
  border-radius: 30px;
  font-size: 14px;
  font-family: $font;
  font-weight: 500;
  line-height: 1.3;
  margin-left: 5px;
  color: #2f2f2f;
  cursor: pointer;
  text-decoration: none;
  &:hover{
    background: color('basic', 1);
  }
  &.raised{
     box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 3px 3px -2px rgba(0, 0, 0, 0.2), 0 1px 8px 0 rgba(0, 0, 0, 0.12);
  }
  &.outline{
    background: transparent;
    border: 1px solid color('basic');
    &:hover{
      background: color('basic');
      color: color('dark');
    }
  }
  > i {
    vertical-align: middle;
    width: $size;
    height: $size;
    font-size: $size;
    line-height: $size;
    color: #2f2f2f;
    &:nth-child(1) {
      height: $size;
      margin-left: -2px;
    }
    &:nth-child(2) {
      height: $size;
      margin-right: 2px;
    }
  }
  > .close{
    font-size: $size;
    position: relative;
    top: -1.2px;
    left: 8px;
    transition: color .2s ease-in-out;
    @include closeBtnColor('dark', .4);
  }
  > img{
    width: 33px;
    height: 33px;
    vertical-align: middle;
    margin: -2px 5px 0 -8px;
    border-radius: 50%;
    &.space{
      width: 25px;
      height: 25px;
      margin: -2px 5px 0 -3px;
      vertical-align: middle;
      border-radius: 50%;
    }
  }
}

@mixin colorClass($name, $tag) {
  background: color($name);
  &.outline{
    background: transparent;
    color: color($name);
    border-color: color($name);
    &:hover{
      background: color($name);
      color: color('light');
    }
  }
  @if $name == "night"{
    > .close{
       @include closeBtnColor('light', .4);
    }
  }
  @if $name == "snow" {
    color: color('dark', 0.8);
    > i {
      color: color('dark');
    }
  } @else if $name == "yellow" {
    color: color('dark', 0.8);
    > i {
      color: color('dark');
      &.close{
         @include closeBtnColor('dark', .6);
      }
    }
  } @else {
    color: color('light', 0.8);
    > i:nth-child(1) {
      color: color('light');
      &.close{
         @include closeBtnColor('dark', .4);
      }
    }
  }
}

$color_vars: "earth", "night", "ocean", "red", "snow", "yellow", "purple", "pink";
@include build-color-class(".mui-chips", $color_vars);
