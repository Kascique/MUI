*:hover,
*:focus {
  outline: none;
}
* {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@color-white: #fff;
@color-black: #000;

@color-basic: #cbcbcb;
@color-earth: #34c559;
@color-night: #161616;
@color-ocean: #2e72ee;
@color-red: #e93030;
@color-snow: #ffffff;
@color-yellow: #e7e828;

label[mui] {
  width: auto;
  min-width: 50px;
  position: relative;
  display: inline-block;
  color: @color-black;
  line-height: 18px;
  cursor: pointer;
  font-family: "Roboto", "Segoe UI", BlinkMacSystemFont, system-ui,
    -apple-system;
  font-size: 14px;
  padding-right: 15px;
  clear: both;
  > input {
    &:empty {
      margin-left: -1000px;
      & ~ span {
        width: auto;
        position: relative;
        float: left;
        cursor: pointer;
        &:before {
          width: 30px;
          height: 13px;
          border-radius: 12px;
          background: #bdbdbd;
          top: 3px;
          left: 0px;
        }
        &:after {
          width: 17px;
          height: 17px;
          margin-left: 0.1em;
          border-radius: 50%;
          background: #fff;
          border: solid 2px #fff;
          box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14),
            0 3px 3px -2px rgba(0, 0, 0, 0.2), 0 1px 8px 0 rgba(0, 0, 0, 0.12);
          top: -1px;
          left: -9px;
        }
        &:before,
        &:after {
          content: "";
          position: absolute;
          display: block;
          -webkit-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
          transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
        }
      }
    }
    &:checked {
      & ~ span:before {
        background: rgba(@color-ocean, 0.8);
      }
      & ~ span:after {
        left: 15px;
        background: @color-ocean;
        border-color: @color-ocean;
      }
    }
  }
  > span {
    text-indent: 45px;
  }
}

label[mui="earth"] {
  .changeToggleColor(@color-earth);
}

label[mui="night"] {
  .changeToggleColor(@color-night);
}

label[mui="ocean"] {
  .changeToggleColor(@color-ocean);
}

label[mui="red"] {
  .changeToggleColor(@color-red);
}

label[mui="yellow"] {
  .changeToggleColor(@color-yellow);
}

.changeToggleColor(@color){
  > input {
    &:checked {
      & ~ span {
        &:before {
          background: rgba(@color, 0.5);
        }
        &:after {
          left: 15px;
          background: @color;
          border-color: @color;
        }
      }
    }
  }
}
